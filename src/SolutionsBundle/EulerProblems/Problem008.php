<?php

namespace SolutionsBundle\EulerProblems;

use SolutionsBundle\EulerProblems\EulerProblem;

/**
 * @author threadhack <threadhack@gmail.com>
 * @created 2012-03-11
 * @link http://projecteuler.net/index.php?section=problems&id=8
 */
class Problem008 implements EulerProblem
{
	const COUNT = 994;
	private $product = "
		7316717653133062491922511967442657474235534919493496983520
		3127745063262395783180169848018694788518438586156078911294
		9495459501737958331952853208805511125406987471585238630507
		1569329096329522744304355766896648950445244523161731856403
		0987111217223831136222989342338030813533627661428280644448
		6645238749303589072962904915604407723907138105158593079608
		6670172427121883998797908792274921901699720888093776657273
		3300105336788122023542180975125454059475224352584907711670
		5560136048395864467063244157221553975369781797784617406495
		5149290862569321978468622482839722413756570560574902614079
		7296865241453510047482166370484403199890008895243450658541
		2275886668811642717147992444292823086346567481391912316282
		4586178664583591245665294765456828489128831426076900422421
		9022671055626321111109370544217506941658960408071984038509
		6245544436298123098787992724428490918884580156166097919133
		8754992005240636899125607176060588611646710940507754100225
		6983155200055935729725716362695618826704282524836008232575
		30420752963450";

	/**
	 * @return int
	 */
	public function solve()
	{
		$temp = 0;
		$retval = 0;
		$retval = ((((7 * 3) * 1) * 6) * 7);

		for ($i = 1; $i < self::COUNT; $i++) {
		$temp = 1;
		for ($n =0; $n < 5; $n++) {
				$temp = intval($this->product[$i + $n]) * $temp;
			}
			$retval = $temp > $retval ? $temp : $retval;
		}
		return $retval;
	}
}
